{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n// import { COMMENTS } from '../../app/shared/oldData/COMMENTS';\nimport { baseUrl } from '../../app/shared/baseUrl';\nexport const fetchComments = createAsyncThunk('comments/fetchComments', async () => {\n  const resopnse = await fetch(baseUrl + 'comments');\n  if (!Response.ok) {\n    return Promise.reject('Unable to fetch staus:');\n  }\n});\nconst initialState = {\n  commentsArray: COMMENTS\n};\nconst commentsSlice = createSlice({\n  name: 'comments',\n  initialState,\n  reducers: {\n    addComment: (state, action) => {\n      const newComment = {\n        id: state.commentsArray.length + 1,\n        ...action.payload\n      };\n      state.commentsArray.push(newComment);\n    }\n  }\n});\nexport const commentsReducer = commentsSlice.reducer;\nexport const {\n  addComment\n} = commentsSlice.actions;\nexport const selectCommentsByCampsiteId = campsiteId => state => {\n  return state.comments.commentsArray.filter(comment => comment.campsiteId === parseInt(campsiteId));\n};","map":{"version":3,"names":["createSlice","createAsyncThunk","baseUrl","fetchComments","resopnse","fetch","Response","ok","Promise","reject","initialState","commentsArray","COMMENTS","commentsSlice","name","reducers","addComment","state","action","newComment","id","length","payload","push","commentsReducer","reducer","actions","selectCommentsByCampsiteId","campsiteId","comments","filter","comment","parseInt"],"sources":["/Users/kennethhu/Desktop/NucampFolder/WebDev/3-React/nucampsite/src/features/comments/commentsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n// import { COMMENTS } from '../../app/shared/oldData/COMMENTS';\nimport {baseUrl} from '../../app/shared/baseUrl'\nexport const fetchComments = createAsyncThunk(\n    'comments/fetchComments',\n    async () =>{\n        const resopnse = await fetch(baseUrl + 'comments');\n        if (!Response.ok){\n            return Promise.reject('Unable to fetch staus:')\n        }\n    }\n)\n\nconst initialState = {\n    commentsArray: COMMENTS,\n};\n\nconst commentsSlice = createSlice({\n    name: 'comments',\n    initialState, \n    reducers: {\n        addComment: (state, action) => {\n            const newComment = {\n                id: state.commentsArray.length +1 ,\n                ...action.payload\n            };\n            state.commentsArray.push(newComment);\n        }\n    }\n});\n\nexport const commentsReducer = commentsSlice.reducer;\nexport const { addComment } = commentsSlice.actions;\n\nexport const selectCommentsByCampsiteId = (campsiteId) => (state) => {\n    return state.comments.commentsArray.filter(\n        (comment) => comment.campsiteId === parseInt(campsiteId)\n    );\n};"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE;AACA,SAAQC,OAAO,QAAO,0BAA0B;AAChD,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CACzC,wBAAwB,EACxB,YAAW;EACP,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,GAAG,UAAU,CAAC;EAClD,IAAI,CAACI,QAAQ,CAACC,EAAE,EAAC;IACb,OAAOC,OAAO,CAACC,MAAM,CAAC,wBAAwB,CAAC;EACnD;AACJ,CACJ,CAAC;AAED,MAAMC,YAAY,GAAG;EACjBC,aAAa,EAAEC;AACnB,CAAC;AAED,MAAMC,aAAa,GAAGb,WAAW,CAAC;EAC9Bc,IAAI,EAAE,UAAU;EAChBJ,YAAY;EACZK,QAAQ,EAAE;IACNC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAMC,UAAU,GAAG;QACfC,EAAE,EAAEH,KAAK,CAACN,aAAa,CAACU,MAAM,GAAE,CAAC;QACjC,GAAGH,MAAM,CAACI;MACd,CAAC;MACDL,KAAK,CAACN,aAAa,CAACY,IAAI,CAACJ,UAAU,CAAC;IACxC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMK,eAAe,GAAGX,aAAa,CAACY,OAAO;AACpD,OAAO,MAAM;EAAET;AAAW,CAAC,GAAGH,aAAa,CAACa,OAAO;AAEnD,OAAO,MAAMC,0BAA0B,GAAIC,UAAU,IAAMX,KAAK,IAAK;EACjE,OAAOA,KAAK,CAACY,QAAQ,CAAClB,aAAa,CAACmB,MAAM,CACrCC,OAAO,IAAKA,OAAO,CAACH,UAAU,KAAKI,QAAQ,CAACJ,UAAU,CAC3D,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}