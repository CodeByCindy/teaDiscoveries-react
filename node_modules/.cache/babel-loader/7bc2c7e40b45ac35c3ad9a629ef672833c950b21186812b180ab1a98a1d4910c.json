{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n// import { CAMPSITES } from '../../app/shared/CAMPSITES'\nimport { baseUrl } from '../../app/shared/baseUrl';\nimport { mapImageURL } from '../../utils/mapImageURL';\nexport const fetchCampsites = createAsyncThunk('campsites/fetchCampsites', async () => {\n  const response = await fetch(baseUrl + 'campsites');\n  if (!response.ok) {\n    return Promise.reject('Unable to fetch, status:' + response.status);\n  }\n  const data = await response.json();\n  return data;\n});\nconst initialState = {\n  campsitesArray: [],\n  isLoading: true,\n  errMsg: ''\n};\nconst campsitesSlice = createSlice({\n  name: 'campsites',\n  initialState,\n  reducer: {},\n  extraReducers: {\n    [fetchCampsites.pending]: state => {\n      state.isLoading = true;\n    },\n    [fetchCampsites.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.errMsg = '';\n      state.campsitesArray = mapImageURL(action.payload);\n    },\n    [fetchCampsites.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.errMsg = action.error ? action.error.message : 'Fetch failed';\n    }\n  }\n});\nexport const campsitesReducer = campsitesSlice.reducer;\nexport const selectAllCampsites = state => {\n  return state.campsites.campsitesArray;\n};\nexport const selectCampsiteById = id => state => {\n  return state.campsites.campsitesArray.find(campsite => campsite.id === parseInt(id));\n};\nexport const selectFeaturedCampsite = state => {\n  return state.campsites.campsitesArray.find(campsite => campsite.featured);\n};","map":{"version":3,"names":["createSlice","createAsyncThunk","baseUrl","mapImageURL","fetchCampsites","response","fetch","ok","Promise","reject","status","data","json","initialState","campsitesArray","isLoading","errMsg","campsitesSlice","name","reducer","extraReducers","pending","state","fulfilled","action","payload","rejected","error","message","campsitesReducer","selectAllCampsites","campsites","selectCampsiteById","id","find","campsite","parseInt","selectFeaturedCampsite","featured"],"sources":["/Users/kennethhu/Desktop/NucampFolder/WebDev/3-React/nucampsite/src/features/campsites/campsitesSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n// import { CAMPSITES } from '../../app/shared/CAMPSITES'\nimport { baseUrl } from '../../app/shared/baseUrl';\nimport { mapImageURL } from '../../utils/mapImageURL';\n\nexport const fetchCampsites = createAsyncThunk(\n    'campsites/fetchCampsites',\n    async () => {\n        const response = await fetch(baseUrl + 'campsites');\n        if(!response.ok){\n            return Promise.reject('Unable to fetch, status:' + response.status );\n        }\n        const data = await response.json();\n        return data;\n    }\n)\nconst initialState = {\n    campsitesArray: [],\n    isLoading: true,\n    errMsg: ''\n};\n\nconst campsitesSlice = createSlice( {\n        name: 'campsites',\n        initialState,\n        reducer: {},\n        extraReducers: {\n            [fetchCampsites.pending]: (state) =>{\n                state.isLoading = true;\n            },\n            [fetchCampsites.fulfilled]: (state, action) =>{\n                state.isLoading = false;\n                state.errMsg = '';\n                state.campsitesArray = mapImageURL(action.payload);\n            },\n            [fetchCampsites.rejected]: (state, action) =>{\n                state.isLoading = false;\n                state.errMsg = action.error? action.error.message : 'Fetch failed';\n            }\n        }\n});\n\nexport const campsitesReducer = campsitesSlice.reducer; \n\nexport const selectAllCampsites = (state) => {\n    return state.campsites.campsitesArray;\n};\n\nexport const selectCampsiteById = (id) => (state) => {\n    return state.campsites.campsitesArray.find(\n        (campsite) => campsite.id === parseInt(id)\n    );\n};\nexport const selectFeaturedCampsite = (state) => {\n    return state.campsites.campsitesArray.find((campsite) => campsite.featured);\n};"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE;AACA,SAASC,OAAO,QAAQ,0BAA0B;AAClD,SAASC,WAAW,QAAQ,yBAAyB;AAErD,OAAO,MAAMC,cAAc,GAAGH,gBAAgB,CAC1C,0BAA0B,EAC1B,YAAY;EACR,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACJ,OAAO,GAAG,WAAW,CAAC;EACnD,IAAG,CAACG,QAAQ,CAACE,EAAE,EAAC;IACZ,OAAOC,OAAO,CAACC,MAAM,CAAC,0BAA0B,GAAGJ,QAAQ,CAACK,MAAO,CAAC;EACxE;EACA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACf,CACJ,CAAC;AACD,MAAME,YAAY,GAAG;EACjBC,cAAc,EAAE,EAAE;EAClBC,SAAS,EAAE,IAAI;EACfC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,cAAc,GAAGjB,WAAW,CAAE;EAC5BkB,IAAI,EAAE,WAAW;EACjBL,YAAY;EACZM,OAAO,EAAE,CAAC,CAAC;EACXC,aAAa,EAAE;IACX,CAAChB,cAAc,CAACiB,OAAO,GAAIC,KAAK,IAAI;MAChCA,KAAK,CAACP,SAAS,GAAG,IAAI;IAC1B,CAAC;IACD,CAACX,cAAc,CAACmB,SAAS,GAAG,CAACD,KAAK,EAAEE,MAAM,KAAI;MAC1CF,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACN,MAAM,GAAG,EAAE;MACjBM,KAAK,CAACR,cAAc,GAAGX,WAAW,CAACqB,MAAM,CAACC,OAAO,CAAC;IACtD,CAAC;IACD,CAACrB,cAAc,CAACsB,QAAQ,GAAG,CAACJ,KAAK,EAAEE,MAAM,KAAI;MACzCF,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACN,MAAM,GAAGQ,MAAM,CAACG,KAAK,GAAEH,MAAM,CAACG,KAAK,CAACC,OAAO,GAAG,cAAc;IACtE;EACJ;AACR,CAAC,CAAC;AAEF,OAAO,MAAMC,gBAAgB,GAAGZ,cAAc,CAACE,OAAO;AAEtD,OAAO,MAAMW,kBAAkB,GAAIR,KAAK,IAAK;EACzC,OAAOA,KAAK,CAACS,SAAS,CAACjB,cAAc;AACzC,CAAC;AAED,OAAO,MAAMkB,kBAAkB,GAAIC,EAAE,IAAMX,KAAK,IAAK;EACjD,OAAOA,KAAK,CAACS,SAAS,CAACjB,cAAc,CAACoB,IAAI,CACrCC,QAAQ,IAAKA,QAAQ,CAACF,EAAE,KAAKG,QAAQ,CAACH,EAAE,CAC7C,CAAC;AACL,CAAC;AACD,OAAO,MAAMI,sBAAsB,GAAIf,KAAK,IAAK;EAC7C,OAAOA,KAAK,CAACS,SAAS,CAACjB,cAAc,CAACoB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACG,QAAQ,CAAC;AAC/E,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}