{"ast":null,"code":"import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';// import { CAMPSITES } from '../../app/shared/CAMPSITES'\nimport{baseUrl}from'../../app/shared/baseUrl';import{mapImageURL}from'../../utils/mapImageURL';export const fetchCampsites=createAsyncThunk('campsites/fetchCampsites',async()=>{const response=await fetch(baseUrl+'campsites');if(!response.ok){return Promise.reject('Unable to fetch, status: '+response.status);}const data=await response.json();return data;});const initialState={campsitesArray:[],isLoading:true,errMsg:''};const campsitesSlice=createSlice({name:'campsites',initialState,reducers:{},extraReducers:{[fetchCampsites.pending]:state=>{state.isLoading=true;},[fetchCampsites.fulfilled]:(state,action)=>{state.isLoading=false;state.errMsg='';state.campsitesArray=mapImageURL(action.payload);},[fetchCampsites.rejected]:(state,action)=>{state.isLoading=false;state.errMsg=action.error?action.error.message:'Fetch failed';}}});export const campsitesReducer=campsitesSlice.reducer;export const selectAllCampsites=state=>{return state.campsites.campsitesArray;};export const selectCampsiteById=id=>state=>{return state.campsites.campsitesArray.find(campsite=>campsite.id===parseInt(id));};export const selectFeaturedCampsite=state=>{return{featuredItem:state.campsites.campsitesArray.find(campsite=>campsite.featured),isLoading:state.campsites.isLoading,errMsg:state.campsites.errMsg};};","map":{"version":3,"names":["createSlice","createAsyncThunk","baseUrl","mapImageURL","fetchCampsites","response","fetch","ok","Promise","reject","status","data","json","initialState","campsitesArray","isLoading","errMsg","campsitesSlice","name","reducers","extraReducers","pending","state","fulfilled","action","payload","rejected","error","message","campsitesReducer","reducer","selectAllCampsites","campsites","selectCampsiteById","id","find","campsite","parseInt","selectFeaturedCampsite","featuredItem","featured"],"sources":["/Users/kennethhu/Desktop/NucampFolder/WebDev/3-React/nucampsite/src/features/campsites/campsitesSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n// import { CAMPSITES } from '../../app/shared/CAMPSITES'\nimport { baseUrl } from '../../app/shared/baseUrl';\nimport { mapImageURL } from '../../utils/mapImageURL';\n\nexport const fetchCampsites = createAsyncThunk(\n    'campsites/fetchCampsites',\n    async () => {\n        const response = await fetch(baseUrl + 'campsites');\n        if (!response.ok) {\n            return Promise.reject('Unable to fetch, status: ' + response.status);\n        }\n        const data = await response.json();\n        return data;\n    }\n);\nconst initialState = {\n    campsitesArray: [],\n    isLoading: true,\n    errMsg: ''\n};\n\nconst campsitesSlice = createSlice({\n    name: 'campsites',\n    initialState,\n    reducers: {},\n    extraReducers: {\n        [fetchCampsites.pending]: (state) => {\n            state.isLoading = true;\n        },\n        [fetchCampsites.fulfilled]: (state, action) => {\n            state.isLoading = false;\n            state.errMsg = '';\n            state.campsitesArray = mapImageURL(action.payload);\n        },\n        [fetchCampsites.rejected]: (state, action) => {\n            state.isLoading = false;\n            state.errMsg = action.error ? action.error.message : 'Fetch failed';\n        }\n    }\n});\n\nexport const campsitesReducer = campsitesSlice.reducer; \n\nexport const selectAllCampsites = (state) => {\n    return state.campsites.campsitesArray;\n};\n\nexport const selectCampsiteById = (id) => (state) => {\n    return state.campsites.campsitesArray.find(\n        (campsite) => campsite.id === parseInt(id)\n    );\n};\nexport const selectFeaturedCampsite = (state) => {\n    return {\n        featuredItem: state.campsites.campsitesArray.find(\n            (campsite) => campsite.featured),\n        isLoading: state.campsites.isLoading,\n        errMsg: state.campsites.errMsg\n    };\n};"],"mappings":"AAAA,OAASA,WAAW,CAAEC,gBAAgB,KAAQ,kBAAkB,CAChE;AACA,OAASC,OAAO,KAAQ,0BAA0B,CAClD,OAASC,WAAW,KAAQ,yBAAyB,CAErD,MAAO,MAAM,CAAAC,cAAc,CAAGH,gBAAgB,CAC1C,0BAA0B,CAC1B,SAAY,CACR,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACJ,OAAO,CAAG,WAAW,CAAC,CACnD,GAAI,CAACG,QAAQ,CAACE,EAAE,CAAE,CACd,MAAO,CAAAC,OAAO,CAACC,MAAM,CAAC,2BAA2B,CAAGJ,QAAQ,CAACK,MAAM,CAAC,CACxE,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CACf,CACJ,CAAC,CACD,KAAM,CAAAE,YAAY,CAAG,CACjBC,cAAc,CAAE,EAAE,CAClBC,SAAS,CAAE,IAAI,CACfC,MAAM,CAAE,EACZ,CAAC,CAED,KAAM,CAAAC,cAAc,CAAGjB,WAAW,CAAC,CAC/BkB,IAAI,CAAE,WAAW,CACjBL,YAAY,CACZM,QAAQ,CAAE,CAAC,CAAC,CACZC,aAAa,CAAE,CACX,CAAChB,cAAc,CAACiB,OAAO,EAAIC,KAAK,EAAK,CACjCA,KAAK,CAACP,SAAS,CAAG,IAAI,CAC1B,CAAC,CACD,CAACX,cAAc,CAACmB,SAAS,EAAG,CAACD,KAAK,CAAEE,MAAM,GAAK,CAC3CF,KAAK,CAACP,SAAS,CAAG,KAAK,CACvBO,KAAK,CAACN,MAAM,CAAG,EAAE,CACjBM,KAAK,CAACR,cAAc,CAAGX,WAAW,CAACqB,MAAM,CAACC,OAAO,CAAC,CACtD,CAAC,CACD,CAACrB,cAAc,CAACsB,QAAQ,EAAG,CAACJ,KAAK,CAAEE,MAAM,GAAK,CAC1CF,KAAK,CAACP,SAAS,CAAG,KAAK,CACvBO,KAAK,CAACN,MAAM,CAAGQ,MAAM,CAACG,KAAK,CAAGH,MAAM,CAACG,KAAK,CAACC,OAAO,CAAG,cAAc,CACvE,CACJ,CACJ,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,gBAAgB,CAAGZ,cAAc,CAACa,OAAO,CAEtD,MAAO,MAAM,CAAAC,kBAAkB,CAAIT,KAAK,EAAK,CACzC,MAAO,CAAAA,KAAK,CAACU,SAAS,CAAClB,cAAc,CACzC,CAAC,CAED,MAAO,MAAM,CAAAmB,kBAAkB,CAAIC,EAAE,EAAMZ,KAAK,EAAK,CACjD,MAAO,CAAAA,KAAK,CAACU,SAAS,CAAClB,cAAc,CAACqB,IAAI,CACrCC,QAAQ,EAAKA,QAAQ,CAACF,EAAE,GAAKG,QAAQ,CAACH,EAAE,CAC7C,CAAC,CACL,CAAC,CACD,MAAO,MAAM,CAAAI,sBAAsB,CAAIhB,KAAK,EAAK,CAC7C,MAAO,CACHiB,YAAY,CAAEjB,KAAK,CAACU,SAAS,CAAClB,cAAc,CAACqB,IAAI,CAC5CC,QAAQ,EAAKA,QAAQ,CAACI,QAAQ,CAAC,CACpCzB,SAAS,CAAEO,KAAK,CAACU,SAAS,CAACjB,SAAS,CACpCC,MAAM,CAAEM,KAAK,CAACU,SAAS,CAAChB,MAC5B,CAAC,CACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}