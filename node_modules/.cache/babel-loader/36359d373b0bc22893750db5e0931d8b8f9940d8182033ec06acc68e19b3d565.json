{"ast":null,"code":"var _jsxFileName = \"/Users/kennethhu/Desktop/NucampFolder/WebDev/3-React/TeaDiscoveries/src/features/user/UserLoginForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCurrentUser, selectCurrentUser } from './userSlice';\nimport { Modal, ModalHeader, ModalBody, FormGroup, Label, Button } from 'reactstrap';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport defaultAvatar from '../../app/assets/images/userIcon.png';\nimport { validateUserLoginForm } from '../../utils/validateUserLoginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserLoginForm = () => {\n  _s();\n  const [loginModalOpen, setLoginModalOpen] = useState(false);\n  const currentUser = useSelector(selectCurrentUser);\n  const dispatch = useDispatch();\n  const handleLogin = values => {\n    const currentUser = {\n      id: Date.now(),\n      avatar: defaultAvatar,\n      username: values.username,\n      password: values.password\n    };\n    dispatch(setCurrentUser(currentUser));\n    setLoginModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: currentUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '3rem',\n          height: '3rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentUser.avatar,\n          alt: 'user',\n          style: {\n            width: '100%',\n            height: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        outline: true,\n        onClick: () => setLoginModalOpen(true),\n        style: {\n          color: '#333333',\n          border: '1px solid grey'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-sign-in fa-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \" Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: loginModalOpen,\n      children: /*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => setLoginModalOpen(false),\n        children: [\"Login\", /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              username: '',\n              password: ''\n            },\n            onSubmit: handleLogin,\n            validate: validateUserLoginForm,\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"username\",\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  id: \"username\",\n                  name: \"username\",\n                  placeholder: \"Username\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"username\",\n                  children: msg => /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-danger\",\n                    children: msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 47\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  id: \"password\",\n                  name: \"password\",\n                  placeholder: \"Password\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"password\",\n                  children: msg => /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-danger\",\n                    children: msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 47\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                color: \"success\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(UserLoginForm, \"A8TR5ZhS4Lji4XY3wdUdwWEdfSk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = UserLoginForm;\nexport default UserLoginForm;\nvar _c;\n$RefreshReg$(_c, \"UserLoginForm\");","map":{"version":3,"names":["useState","useSelector","useDispatch","setCurrentUser","selectCurrentUser","Modal","ModalHeader","ModalBody","FormGroup","Label","Button","Formik","Field","Form","ErrorMessage","defaultAvatar","validateUserLoginForm","jsxDEV","_jsxDEV","Fragment","_Fragment","UserLoginForm","_s","loginModalOpen","setLoginModalOpen","currentUser","dispatch","handleLogin","values","id","Date","now","avatar","username","password","children","style","width","height","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","outline","onClick","color","border","className","isOpen","toggle","initialValues","onSubmit","validate","htmlFor","name","placeholder","msg","type","_c","$RefreshReg$"],"sources":["/Users/kennethhu/Desktop/NucampFolder/WebDev/3-React/TeaDiscoveries/src/features/user/UserLoginForm.js"],"sourcesContent":["import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCurrentUser, selectCurrentUser } from './userSlice';\nimport {\n    Modal,\n    ModalHeader,\n    ModalBody,\n    FormGroup,\n    Label,\n    Button\n} from 'reactstrap';\n\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport defaultAvatar from '../../app/assets/images/userIcon.png';\nimport { validateUserLoginForm } from '../../utils/validateUserLoginForm';\n\nconst UserLoginForm = () => {\n    const [ loginModalOpen, setLoginModalOpen ] = useState(false);\n    const currentUser = useSelector(selectCurrentUser);\n    const dispatch = useDispatch();\n    \n    const handleLogin = (values) => {\n        const currentUser = {\n            id: Date.now(),\n            avatar: defaultAvatar,\n            username: values.username,\n            password: values.password\n        }\n        dispatch(setCurrentUser(currentUser));\n        setLoginModalOpen(false);\n    }\n\n    return (\n    <>\n        <span >\n        {currentUser ? (\n            <div style={{ width: '3rem', height: '3rem' }}>\n                <img\n                    src={currentUser.avatar}\n                    alt={'user'}\n                    style={{ width: '100%', height: '100%' }}\n                />\n            </div>\n            ) : (\n            <Button\n                outline\n                onClick={() => setLoginModalOpen(true)}\n                style={{ color: '#333333', border: '1px solid grey' }}\n            >\n                <i className='fa fa-sign-in fa-lg'> \n                <a> Login</a>\n                </i>\n            </Button>\n        )}\n        </span>\n        <Modal isOpen={loginModalOpen}>\n            <ModalHeader toggle= {()=> setLoginModalOpen(false)}>\n                Login\n                <ModalBody>\n                    <Formik \n                    initialValues={{\n                        username:'',\n                        password:''\n                    }} \n                    onSubmit={handleLogin}\n                    validate={validateUserLoginForm}\n                    >\n                        <Form>\n                            <FormGroup>\n                                <Label htmlFor='username'>Username</Label>\n                                <Field\n                                    id='username'\n                                    name='username'\n                                    placeholder='Username'\n                                    className = 'form-control'\n                               />\n                                 <ErrorMessage name='username'>\n                                    {(msg) => <p className = 'text-danger'>{msg}</p>}\n                                </ErrorMessage>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor='password'>Password</Label>\n                                <Field\n                                    id='password'\n                                    name='password'\n                                    placeholder='Password'\n                                    className = 'form-control'\n                                />\n                                 <ErrorMessage name='password'>\n                                    {(msg) => <p className = 'text-danger'>{msg}</p>}\n                                </ErrorMessage>\n                            </FormGroup>\n                            <Button type='submit' color='success'>Login</Button>\n                        </Form>\n                    </Formik>\n                </ModalBody>\n            </ModalHeader>\n        </Modal>\n    </>\n    )\n}\n\nexport default UserLoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}